/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.Customer;

import Business.EcoSystem;
import Business.VehicleService.Booking.Vehicle;
import Business.User.User;
import Business.WorkRequest.VehicleWorkRequest;
import java.awt.Color;
import java.awt.Component;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.MutableComboBoxModel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import ui.GMapsFrame;

/**
 *
 * @author Rushang
 */
public class VehicleBookingPanel extends javax.swing.JPanel {

    /**
     * Creates new form VehicleBookingPanel
     */
    EcoSystem system;
    User user;

    public VehicleBookingPanel(EcoSystem system, User user) {
        initComponents();
        this.system = system;
        this.user = user;
        this.latTxt1 = latTxt;
        this.longTxt1 = longTxt;

        MutableComboBoxModel<String> model = new DefaultComboBoxModel<String>();

        for (Vehicle vehicleList : system.getVehicleDirectory().getVehicleDirectory()) {
            model.addElement(vehicleList.getVehicleName());
        }

        chooseVehicleDropdown.setModel(model);

        vehicleNameTxt.setEditable(false);
        vehicleCategoryTxt.setEditable(false);
        vehicleSeaterTxt.setEditable(false);
        priceTxt.setEditable(false);
        vehicleNumberTxt.setEditable(false);

        populateRequestTable();
        formatRows();
    }
    
    public static void setLatLongDetails(double lat, double longitude) {
        latTxt1.setText(String.valueOf(lat));
        longTxt1.setText(String.valueOf(longitude));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        chooseVehicleDropdown = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        vehicleNameTxt = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        vehicleCategoryTxt = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        vehicleSeaterTxt = new javax.swing.JTextField();
        viewVehicleBtn = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        priceTxt = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        numberOfHoursTxt = new javax.swing.JTextField();
        bookVehicleBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        vehicleWorkQueueTable = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        vehicleNumberTxt = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        latTxt = new javax.swing.JTextField();
        longTxt = new javax.swing.JTextField();
        vehicleBookingDateTxt = new com.toedter.calendar.JDateChooser();

        setBackground(new java.awt.Color(204, 102, 255));
        setLayout(null);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("Book A Vehicle");
        add(jLabel1);
        jLabel1.setBounds(620, 20, 250, 70);

        add(chooseVehicleDropdown);
        chooseVehicleDropdown.setBounds(730, 130, 270, 30);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setText("Choose a vehicle of your choice:");
        add(jLabel2);
        jLabel2.setBounds(420, 130, 280, 25);

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setText("Vehicle Name:");
        add(jLabel3);
        jLabel3.setBounds(690, 210, 122, 30);

        vehicleNameTxt.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        add(vehicleNameTxt);
        vehicleNameTxt.setBounds(840, 210, 160, 31);

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel4.setText("Vehicle Category:");
        add(jLabel4);
        jLabel4.setBounds(230, 230, 149, 25);

        vehicleCategoryTxt.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        add(vehicleCategoryTxt);
        vehicleCategoryTxt.setBounds(400, 230, 160, 31);

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel5.setText("Vehicle Seater:");
        add(jLabel5);
        jLabel5.setBounds(690, 270, 130, 25);

        vehicleSeaterTxt.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        add(vehicleSeaterTxt);
        vehicleSeaterTxt.setBounds(840, 270, 160, 31);

        viewVehicleBtn.setBackground(new java.awt.Color(0, 0, 0));
        viewVehicleBtn.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        viewVehicleBtn.setForeground(new java.awt.Color(255, 255, 255));
        viewVehicleBtn.setText("View Details");
        viewVehicleBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewVehicleBtnActionPerformed(evt);
            }
        });
        add(viewVehicleBtn);
        viewVehicleBtn.setBounds(1070, 120, 170, 60);

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel6.setText("Price per hour:");
        add(jLabel6);
        jLabel6.setBounds(690, 320, 170, 30);

        priceTxt.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        add(priceTxt);
        priceTxt.setBounds(840, 320, 160, 30);

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel7.setText("Select Vehicle Booking Date:");
        add(jLabel7);
        jLabel7.setBounds(130, 360, 270, 30);

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel8.setText("Enter Number of Hours:");
        add(jLabel8);
        jLabel8.setBounds(170, 290, 220, 30);

        numberOfHoursTxt.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        add(numberOfHoursTxt);
        numberOfHoursTxt.setBounds(400, 290, 160, 30);

        bookVehicleBtn.setBackground(new java.awt.Color(0, 0, 0));
        bookVehicleBtn.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        bookVehicleBtn.setForeground(new java.awt.Color(255, 255, 255));
        bookVehicleBtn.setText("Book Vehicle");
        bookVehicleBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookVehicleBtnActionPerformed(evt);
            }
        });
        add(bookVehicleBtn);
        bookVehicleBtn.setBounds(1070, 270, 170, 60);

        vehicleWorkQueueTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Vehicle Name", "Vehicle Number", "Booking Date", "Price per hour", "Number of hours", "Total price", "Request Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Float.class, java.lang.Integer.class, java.lang.Float.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(vehicleWorkQueueTable);

        add(jScrollPane1);
        jScrollPane1.setBounds(30, 640, 1410, 320);

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel9.setText("Vehicle Booking Status");
        add(jLabel9);
        jLabel9.setBounds(610, 580, 280, 32);

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel10.setText("Vehicle Number:");
        add(jLabel10);
        jLabel10.setBounds(670, 380, 150, 30);

        vehicleNumberTxt.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        add(vehicleNumberTxt);
        vehicleNumberTxt.setBounds(840, 380, 160, 30);

        jButton1.setBackground(new java.awt.Color(0, 0, 0));
        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Location");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1);
        jButton1.setBounds(1070, 410, 170, 60);

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel11.setText("Latitude :");
        add(jLabel11);
        jLabel11.setBounds(290, 440, 120, 30);

        jLabel13.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel13.setText("Longitude :");
        add(jLabel13);
        jLabel13.setBounds(700, 440, 140, 30);

        latTxt.setEditable(false);
        latTxt.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        add(latTxt);
        latTxt.setBounds(400, 440, 160, 30);

        longTxt.setEditable(false);
        longTxt.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        add(longTxt);
        longTxt.setBounds(840, 440, 160, 30);
        add(vehicleBookingDateTxt);
        vehicleBookingDateTxt.setBounds(400, 360, 160, 30);
    }// </editor-fold>//GEN-END:initComponents

    private void viewVehicleBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewVehicleBtnActionPerformed
        // View Vehicle Details on choosing

        try {
            if (chooseVehicleDropdown.getSelectedItem() != null) {

                String vehicleName = String.valueOf(chooseVehicleDropdown.getSelectedItem());
                Vehicle vehicleDetails = system.getVehicleDirectory().getVehicleByName(vehicleName);

                vehicleNameTxt.setText(vehicleDetails.getVehicleName());
                vehicleCategoryTxt.setText(vehicleDetails.getCategory());
                vehicleSeaterTxt.setText(String.valueOf(vehicleDetails.getSeater()));
                vehicleNumberTxt.setText(vehicleDetails.getVehicleNumber());
                priceTxt.setText(String.valueOf(vehicleDetails.getPrice()));

            } else {
                JOptionPane.showMessageDialog(this, "Choose a valid Vehicle for booking");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Choose a valid Vehicle for booking");
        }
    }//GEN-LAST:event_viewVehicleBtnActionPerformed

    private void bookVehicleBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookVehicleBtnActionPerformed
        // Book a vehicle after entering details
        VehicleWorkRequest bookVehicle = new VehicleWorkRequest();

        try {
            if (chooseVehicleDropdown.getSelectedItem() != null) {
                String vehicleName = String.valueOf(chooseVehicleDropdown.getSelectedItem());
                Vehicle vehicleDetails = system.getVehicleDirectory().getVehicleByName(vehicleName);

                Date selectedDate = vehicleBookingDateTxt.getDate();
                SimpleDateFormat dateFormat = new SimpleDateFormat("MM/dd/yyyy");
                String strDate = dateFormat.format(selectedDate);
                Date bookingDate = dateFormat.parse(strDate);

                int numberOfHours = Integer.parseInt(numberOfHoursTxt.getText());

                bookVehicle.setVehicleDetails(vehicleDetails);
                bookVehicle.setBookingDate(bookingDate);
                bookVehicle.setNumberOfHours(numberOfHours);
                bookVehicle.setUserId(user.getUserId());
                bookVehicle.setStatus("Pending");

                system.getVehicleWorkRequestDirectory().getVehicleWorkRequestList().add(bookVehicle);

                JOptionPane.showMessageDialog(this, "Vehicle booking request sent to Contractor");
                populateRequestTable();
                clearFields();
                formatRows();

            } else {
                JOptionPane.showMessageDialog(this, "Enter valid values for date and number of hours for booking a Vehicle");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Enter valid values for date and number of hours for booking a Vehicle");
        }
    }//GEN-LAST:event_bookVehicleBtnActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        GMapsFrame gMapsFrame = new GMapsFrame();
        gMapsFrame.setExtendedState(JFrame.MAXIMIZED_BOTH);
        gMapsFrame.setVisible(true);
        new GMapsFrame(gMapsFrame);
    }//GEN-LAST:event_jButton1ActionPerformed

    private static javax.swing.JTextField latTxt1;
    private static javax.swing.JTextField longTxt1;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bookVehicleBtn;
    private javax.swing.JComboBox<String> chooseVehicleDropdown;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField latTxt;
    private javax.swing.JTextField longTxt;
    private javax.swing.JTextField numberOfHoursTxt;
    private javax.swing.JTextField priceTxt;
    private com.toedter.calendar.JDateChooser vehicleBookingDateTxt;
    private javax.swing.JTextField vehicleCategoryTxt;
    private javax.swing.JTextField vehicleNameTxt;
    private javax.swing.JTextField vehicleNumberTxt;
    private javax.swing.JTextField vehicleSeaterTxt;
    private javax.swing.JTable vehicleWorkQueueTable;
    private javax.swing.JButton viewVehicleBtn;
    // End of variables declaration//GEN-END:variables

    private void populateRequestTable() {

        try {
            DefaultTableModel model = (DefaultTableModel) vehicleWorkQueueTable.getModel();
            model.setRowCount(0);

            for (VehicleWorkRequest vehicleWorkRequest : system.getVehicleWorkRequestDirectory().getVehicleWorkRequestList()) {

                if (vehicleWorkRequest.getUserId().equals(user.getUserId())) {
                    Object[] newRow = new Object[7];
                    newRow[0] = vehicleWorkRequest.getVehicleDetails().getVehicleName();
                    newRow[1] = vehicleWorkRequest.getVehicleDetails().getVehicleNumber();
                    newRow[2] = vehicleWorkRequest.getBookingDate();
                    newRow[3] = vehicleWorkRequest.getVehicleDetails().getPrice();
                    newRow[4] = vehicleWorkRequest.getNumberOfHours();
                    newRow[5] = (vehicleWorkRequest.getVehicleDetails().getPrice() * vehicleWorkRequest.getNumberOfHours());
                    newRow[6] = vehicleWorkRequest.getStatus();

                    model.addRow(newRow);
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }

    private void clearFields() {

        vehicleNameTxt.setText("");
        vehicleCategoryTxt.setText("");
        priceTxt.setText("");
        vehicleSeaterTxt.setText("");
        vehicleNumberTxt.setText("");
        numberOfHoursTxt.setText("");
        vehicleBookingDateTxt.setCalendar(null);
        latTxt.setText("");
        longTxt.setText("");
    }

    private void formatRows() {

        DefaultTableModel model = (DefaultTableModel) vehicleWorkQueueTable.getModel();

        vehicleWorkQueueTable.setDefaultRenderer(Object.class, new DefaultTableCellRenderer() {
            @Override
            public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
                final Component c = super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
                String status = String.valueOf(model.getValueAt(row, 6));
                c.setBackground(status.equals("Pending") ? Color.WHITE : status.equals("Approved") ? Color.GREEN : Color.RED);
                return c;
            }
        });

    }

}
